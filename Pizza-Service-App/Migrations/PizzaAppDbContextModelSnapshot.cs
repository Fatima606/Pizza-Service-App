// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizza_Service_App.Pizaa_App_DbContext;

#nullable disable

namespace Pizza_Service_App.Migrations
{
    [DbContext(typeof(PizzaAppDbContext))]
    partial class PizzaAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pizza_Service_App.Models.Base", b =>
                {
                    b.Property<Guid>("baseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("baseId");

                    b.ToTable("Base");

                    b.HasData(
                        new
                        {
                            baseId = new Guid("df079fa9-8760-40e1-8cb3-f3a25dc9bc35"),
                            BaseName = "Thick"
                        },
                        new
                        {
                            baseId = new Guid("3b74d9af-6990-484a-8c16-a5a874d51872"),
                            BaseName = "Thin"
                        });
                });

            modelBuilder.Entity("Pizza_Service_App.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Pizza_Service_App.Models.Pizza", b =>
                {
                    b.Property<Guid>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PizzaId");

                    b.HasIndex("BaseId");

                    b.HasIndex("SizeId");

                    b.ToTable("Pizza");
                });

            modelBuilder.Entity("Pizza_Service_App.Models.PizzaTopping", b =>
                {
                    b.Property<Guid>("PizzaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ToppingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PizzaId", "ToppingId");

                    b.HasIndex("ToppingId");

                    b.ToTable("PizzaTopping");
                });

            modelBuilder.Entity("Pizza_Service_App.Models.Size", b =>
                {
                    b.Property<Guid>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PizzaSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SizeId");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
                            SizeId = new Guid("bc0be682-4b89-4c86-9bc8-c3b806c7a33d"),
                            PizzaSize = "Large"
                        },
                        new
                        {
                            SizeId = new Guid("64ebe76f-ef30-44b7-99e4-0a09f818999e"),
                            PizzaSize = "Medium"
                        },
                        new
                        {
                            SizeId = new Guid("027cd1dd-c7bf-4146-9501-bbee6856d0af"),
                            PizzaSize = "Small"
                        });
                });

            modelBuilder.Entity("Pizza_Service_App.Models.Toppings", b =>
                {
                    b.Property<Guid>("ToppingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ToppingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToppingId");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            ToppingId = new Guid("b4477518-037d-4ef9-a1f6-66b03667dfa9"),
                            ToppingName = "Chicken"
                        },
                        new
                        {
                            ToppingId = new Guid("3e21e51d-0d97-4127-a226-10fd57f13ec2"),
                            ToppingName = "Pepperoni"
                        },
                        new
                        {
                            ToppingId = new Guid("bcd5ecfc-58b4-4c24-8dc7-fee0bf8b46cf"),
                            ToppingName = "Extra Chaeese"
                        },
                        new
                        {
                            ToppingId = new Guid("e54d46be-8e81-4be7-bcf4-131772b03c96"),
                            ToppingName = "Mushroom"
                        },
                        new
                        {
                            ToppingId = new Guid("bce9eaee-5954-4b09-8fcb-69e51b5b3d30"),
                            ToppingName = "Spinach"
                        },
                        new
                        {
                            ToppingId = new Guid("ba04a6a4-f18c-47ab-a587-53958d0a506d"),
                            ToppingName = "Olives"
                        });
                });

            modelBuilder.Entity("Pizza_Service_App.Models.Order", b =>
                {
                    b.HasOne("Pizza_Service_App.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("Pizza_Service_App.Models.Pizza", b =>
                {
                    b.HasOne("Pizza_Service_App.Models.Base", "_base")
                        .WithMany()
                        .HasForeignKey("BaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizza_Service_App.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Size");

                    b.Navigation("_base");
                });

            modelBuilder.Entity("Pizza_Service_App.Models.PizzaTopping", b =>
                {
                    b.HasOne("Pizza_Service_App.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizza_Service_App.Models.Toppings", "Topping")
                        .WithMany()
                        .HasForeignKey("ToppingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");

                    b.Navigation("Topping");
                });
#pragma warning restore 612, 618
        }
    }
}
